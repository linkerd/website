# Automatically generated by the linkerd doc command, do not manually edit

AnnotationsReference:
- Description: Controls whether or not a pod should be injected; accepted values are
    `enabled`, `disabled` and `ingress`
  Name: linkerd.io/inject
- Description: Linkerd proxy container image name
  Name: config.linkerd.io/proxy-image
- Description: Docker image pull policy
  Name: config.linkerd.io/image-pull-policy
- Description: Linkerd init container image name
  Name: config.linkerd.io/init-image
- Description: Linkerd init container image version
  Name: config.linkerd.io/init-image-version
- Description: Linkerd debug container image name
  Name: config.linkerd.io/debug-image
- Description: Linkerd debug container image version
  Name: config.linkerd.io/debug-image-version
- Description: Docker image pull policy for debug image
  Name: config.linkerd.io/debug-image-pull-policy
- Description: Proxy port to use for control
  Name: config.linkerd.io/control-port
- Description: Ports that should skip the proxy and send directly to the application.
    Comma-separated list of values, where each value can be a port number or a range
    `a-b`.
  Name: config.linkerd.io/skip-inbound-ports
- Description: Ports that skip the proxy's protocol detection mechanism and are proxied
    opaquely. Comma-separated list of values, where each value can be a port number
    or a range `a-b`.
  Name: config.linkerd.io/opaque-ports
- Description: Outbound ports that should skip the proxy. Comma-separated list of
    values, where each value can be a port number or a range `a-b`.
  Name: config.linkerd.io/skip-outbound-ports
- Description: Proxy port to use for inbound traffic
  Name: config.linkerd.io/inbound-port
- Description: Proxy port to serve metrics on
  Name: config.linkerd.io/admin-port
- Description: Proxy port to use for outbound traffic
  Name: config.linkerd.io/outbound-port
- Description: Comma-separated list of (non-proxy) container ports exposed by the
    pod spec. Useful when other mutating webhooks inject sidecar containers after
    the proxy injector has run
  Name: config.linkerd.io/pod-inbound-ports
- Description: Amount of CPU units that the proxy sidecar requests
  Name: config.linkerd.io/proxy-cpu-request
- Description: Amount of Memory that the proxy sidecar requests
  Name: config.linkerd.io/proxy-memory-request
- Description: Used to override the requestEphemeralStorage config
  Name: config.linkerd.io/proxy-ephemeral-storage-request
- Description: Maximum amount of CPU units that the proxy sidecar can use
  Name: config.linkerd.io/proxy-cpu-limit
- Description: Maximum amount of Memory that the proxy sidecar can use
  Name: config.linkerd.io/proxy-memory-limit
- Description: Used to override the limitEphemeralStorage config
  Name: config.linkerd.io/proxy-ephemeral-storage-limit
- Description: Run the proxy under this user ID
  Name: config.linkerd.io/proxy-uid
- Description: Log level for the proxy
  Name: config.linkerd.io/proxy-log-level
- Description: Log format (plain or json) for the proxy
  Name: config.linkerd.io/proxy-log-format
- Description: Enables HTTP access logging in the proxy. Accepted values are `apache`,
    to output the access log in the Appache Common Log Format, and `json`, to output
    the access log in JSON.
  Name: config.linkerd.io/access-log
- Description: Enable service profiles for non-Kubernetes services
  Name: config.linkerd.io/enable-external-profiles
- Description: Tag to be used for the Linkerd proxy images
  Name: config.linkerd.io/proxy-version
- Description: Proxy's default inbound policy
  Name: config.linkerd.io/default-inbound-policy
- Description: Inject a debug sidecar for data plane debugging
  Name: config.linkerd.io/enable-debug-sidecar
- Description: Used to configure the outbound TCP connection timeout in the proxy
  Name: config.linkerd.io/proxy-outbound-connect-timeout
- Description: Inbound TCP connection timeout in the proxy
  Name: config.linkerd.io/proxy-inbound-connect-timeout
- Description: Maximum time allowed before an unused outbound discovery result is
    evicted from the cache. Defaults to `5s`
  Name: config.linkerd.io/proxy-outbound-discovery-cache-unused-timeout
- Description: Maximum time allowed before an unused inbound discovery result is evicted
    from the cache. Defaults to `90s`
  Name: config.linkerd.io/proxy-inbound-discovery-cache-unused-timeout
- Description: The proxy sidecar will stay alive for at least the given period after
    receiving SIGTERM signal from Kubernetes but no longer than pod's `terminationGracePeriodSeconds`.
    Defaults to `0`
  Name: config.alpha.linkerd.io/proxy-wait-before-exit-seconds
- Description: The application container will not start until the proxy is ready;
    accepted values are `enabled` and `disabled`
  Name: config.linkerd.io/proxy-await
- Description: Sets nf_conntrack_tcp_timeout_close_wait. Accepts a duration string,
    e.g. `1m` or `3600s`
  Name: config.linkerd.io/close-wait-timeout
- Description: Comma-separated list of subnets in valid CIDR format that should be
    skipped by the proxy
  Name: config.linkerd.io/skip-subnets
- Description: Grace period for graceful proxy shutdowns. If this timeout elapses
    before all open connections have completed, the proxy will terminate forcefully,
    closing any remaining connections.
  Name: config.linkerd.io/shutdown-grace-period
CLIReference:
- Description: List authorizations for a resource.
  Example: ""
  InheritedOptions: null
  Name: authz
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for authz
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of resource
  SeeAlso: null
  Synopsis: List authorizations for a resource
- Description: |-
    Check the Linkerd installation for potential problems.

    The check command will perform a series of checks to validate that the linkerd
    CLI and control plane are configured correctly. If the command encounters a
    failure it will print additional information about the failure and exit with a
    non-zero exit code.
  Example: |2-
      # Check that the Linkerd control plane is up and running
      linkerd check

      # Check that the Linkerd control plane can be installed in the "test" namespace
      linkerd check --pre --linkerd-namespace test

      # Check that the Linkerd data plane proxies in the "app" namespace are up and running
      linkerd check --proxy --namespace app
  InheritedOptions: null
  Name: check
  Options:
  - DefaultValue: ""
    Name: cli-version-override
    Shorthand: ""
    Usage: Used to override the version of the cli (mostly for testing)
  - DefaultValue: ""
    Name: crds
    Shorthand: ""
    Usage: |
      Only run checks which determine if the Linkerd CRDs have been installed
  - DefaultValue: ""
    Name: expected-version
    Shorthand: ""
    Usage: |
      Overrides the version used when checking if Linkerd is running the latest version (mostly for testing)
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for check
  - DefaultValue: ""
    Name: linkerd-cni-enabled
    Shorthand: ""
    Usage: |
      When running pre-installation checks (--pre), assume the linkerd-cni plugin is already installed, and a NET_ADMIN check is not needed
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: |
      Namespace to use for --proxy checks (default: all namespaces)
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format. One of: table, json, short'
  - DefaultValue: ""
    Name: pre
    Shorthand: ""
    Usage: |
      Only run pre-installation checks, to determine if the control plane can be installed
  - DefaultValue: ""
    Name: proxy
    Shorthand: ""
    Usage: |
      Only run data-plane checks, to determine if the data plane is healthy
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: Maximum allowed time for all tests to pass
  SeeAlso: null
  Synopsis: Check the Linkerd installation for potential problems
- Description: |
    Output shell completion code for the specified shell (bash, zsh or fish).
  Example: |2-
      # bash <= 3.2:
      # To load shell completion into your current shell session
      source /dev/stdin <<< "$(linkerd completion bash)"

      # bash >= 4.0:
      source <(linkerd completion bash)

      # To load shell completion for every shell session
      # bash <= 3.2 on osx:
      brew install bash-completion # ensure you have bash-completion 1.3+
      linkerd completion bash > $(brew --prefix)/etc/bash_completion.d/linkerd

      # bash >= 4.0 on osx:
      brew install bash-completion@2
      linkerd completion bash > $(brew --prefix)/etc/bash_completion.d/linkerd

      # bash >= 4.0 on linux:
      linkerd completion bash > /etc/bash_completion.d/linkerd

      # You will need to start a new shell for this setup to take effect.

      # zsh:
      # If shell completion is not already enabled in your environment you will need
      # to enable it.  You can execute the following once:

      echo "autoload -U compinit && compinit" >> ~/.zshrc

      # create a linkerd 'plugins' folder and add it to your $fpath
      mkdir $ZSH/plugins/linkerd && echo "fpath=($ZSH/plugins/linkerd $fpath)" >> ~/.zshrc

      # To load completions for each session, execute once:
      linkerd completion zsh > "${fpath[1]}/_linkerd" && exec $SHELL

      # You will need to start a new shell for this setup to take effect.

      # fish:
      linkerd completion fish | source

      # To load fish shell completions for each session, execute once:
      linkerd completion fish > ~/.config/fish/completions/linkerd.fish
  InheritedOptions: null
  Name: completion
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for completion
  SeeAlso: null
  Synopsis: |
    Output shell completion code for the specified shell (bash, zsh or fish)
- Description: |-
    Fetch metrics directly from Linkerd control plane containers.

      This command initiates port-forward to each control plane process, and
      queries the /metrics endpoint on them.
  Example: ""
  InheritedOptions: null
  Name: diagnostics controller-metrics
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for controller-metrics
  - DefaultValue: ""
    Name: wait
    Shorthand: w
    Usage: Time allowed to fetch diagnostics
  SeeAlso: null
  Synopsis: |
    Fetch metrics directly from the Linkerd control plane containers
- Description: |-
    Introspect Linkerd's service discovery state.

    This command provides debug information about the internal state of the
    control-plane's destination container. It queries the same Destination service
    endpoint as the linkerd-proxy's, and returns the addresses associated with that
    destination.
  Example: |2-
      # get all endpoints for the authorities emoji-svc.emojivoto.svc.cluster.local:8080 and web-svc.emojivoto.svc.cluster.local:80
      linkerd diagnostics endpoints emoji-svc.emojivoto.svc.cluster.local:8080 web-svc.emojivoto.svc.cluster.local:80

      # get that same information in json format
      linkerd diagnostics endpoints -o json emoji-svc.emojivoto.svc.cluster.local:8080 web-svc.emojivoto.svc.cluster.local:80

      # get the endpoints for authorities in Linkerd's control-plane itself
      linkerd diagnostics endpoints web.linkerd-viz.svc.cluster.local:8084
  InheritedOptions: null
  Name: diagnostics endpoints
  Options:
  - DefaultValue: ""
    Name: destination-pod
    Shorthand: ""
    Usage: |
      Target a specific destination Pod when there are multiple running
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for endpoints
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format; one of: "table" or "json"'
  SeeAlso: null
  Synopsis: Introspect Linkerd's service discovery state
- Description: |-
    Introspect Linkerd's policy state.

    This command provides debug information about the internal state of the
    control-plane's policy controller. It queries the same control-plane
    endpoint as the linkerd-proxy's, and returns the policies associated with the
    given resource. If the resource is a Pod, inbound policy for that Pod is
    displayed. If the resource is a Service, outbound policy for that Service is
    displayed.
  Example: |2-
      # get the inbound policy for pod emoji-6d66d87995-bvrnn on port 8080
      linkerd diagnostics policy -n emojivoto po/emoji-6d66d87995-bvrnn 8080

      # get the outbound policy for Service emoji-svc on port 8080
      linkerd diagnostics policy -n emojivoto svc/emoji-svc 8080
  InheritedOptions: null
  Name: diagnostics policy
  Options:
  - DefaultValue: ""
    Name: destination-pod
    Shorthand: ""
    Usage: |
      Target a specific destination Pod when there are multiple running
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for policy
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of resource
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format. One of: yaml, json'
  SeeAlso: null
  Synopsis: Introspect Linkerd's policy state
- Description: |-
    Fetch metrics directly from Linkerd proxies.

      This command initiates a port-forward to a given pod or set of pods, and
      queries the /metrics endpoint on the Linkerd proxies.

      The RESOURCE argument specifies the target resource to query metrics for:
      (TYPE/NAME)

      Examples:
      * cronjob/my-cronjob
      * deploy/my-deploy
      * ds/my-daemonset
      * job/my-job
      * po/mypod1
      * rc/my-replication-controller
      * sts/my-statefulset

      Valid resource types include:
      * cronjobs
      * daemonsets
      * deployments
      * jobs
      * pods
      * replicasets
      * replicationcontrollers
      * statefulsets
  Example: |2-
      # Get metrics from pod-foo-bar in the default namespace.
      linkerd diagnostics proxy-metrics po/pod-foo-bar

      # Get metrics from the web deployment in the emojivoto namespace.
      linkerd diagnostics proxy-metrics -n emojivoto deploy/web

      # Get metrics from the linkerd-destination pod in the linkerd namespace.
      linkerd diagnostics proxy-metrics -n linkerd $(
        kubectl --namespace linkerd get pod \
          --selector linkerd.io/control-plane-component=destination \
          --output name
      )
  InheritedOptions: null
  Name: diagnostics proxy-metrics
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for proxy-metrics
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of resource
  - DefaultValue: ""
    Name: obfuscate
    Shorthand: ""
    Usage: Obfuscate sensitive information
  SeeAlso: null
  Synopsis: Fetch metrics directly from Linkerd proxies
- Description: |-
    Commands used to diagnose Linkerd components.

    This command provides subcommands to diagnose the functionality of Linkerd.
  Example: "  # Get control-plane component metrics\n  linkerd diagnostics controller-metrics\n\n
    \ # Get metrics from the web deployment in the emojivoto namespace.\n  linkerd
    diagnostics proxy-metrics -n emojivoto deploy/web\n\n  # Get the endpoints for
    authorities in Linkerd's control-plane itself\n  linkerd diagnostics endpoints
    web.linkerd-viz.svc.cluster.local:8084\n  "
  InheritedOptions: null
  Name: diagnostics
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for diagnostics
  SeeAlso: null
  Synopsis: Commands used to diagnose Linkerd components
- Description: "Display the certificate(s) of one or more selected pod(s).\n\nThis
    command initiates a port-forward to a given pod or a set of pods and fetches the
    TLS certificate.\n\t\t"
  Example: " # Get certificate from pod foo-bar in the default namespace.\n linkerd
    identity foo-bar\n\n # Get certificate from all pods with the label name=nginx\n
    linkerd identity -l name=nginx\n\t\t"
  InheritedOptions: null
  Name: identity
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for identity
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of the pod
  - DefaultValue: ""
    Name: selector
    Shorthand: l
    Usage: "Selector (label query) to filter on, supports ‘=’, ‘==’, and ‘!=’ \n"
  SeeAlso: null
  Synopsis: Display the certificate(s) of one or more selected pod(s)
- Description: |-
    Add the Linkerd proxy to a Kubernetes config.

    You can inject resources contained in a single file, inside a folder and its
    sub-folders, or coming from stdin.
  Example: |2-
      # Inject all the deployments in the default namespace.
      kubectl get deploy -o yaml | linkerd inject - | kubectl apply -f -

      # Injecting a file from a remote URL
      linkerd inject https://url.to/yml | kubectl apply -f -

      # Inject all the resources inside a folder and its sub-folders.
      linkerd inject <folder> | kubectl apply -f -
  InheritedOptions: null
  Name: inject
  Options:
  - DefaultValue: ""
    Name: admin-port
    Shorthand: ""
    Usage: Proxy port to serve metrics on
  - DefaultValue: ""
    Name: close-wait-timeout
    Shorthand: ""
    Usage: Sets nf_conntrack_tcp_timeout_close_wait
  - DefaultValue: ""
    Name: control-port
    Shorthand: ""
    Usage: Proxy port to use for control
  - DefaultValue: ""
    Name: default-inbound-policy
    Shorthand: ""
    Usage: Inbound policy to use to control inbound access to the proxy
  - DefaultValue: ""
    Name: disable-identity
    Shorthand: ""
    Usage: Disables resources from participating in TLS identity
  - DefaultValue: ""
    Name: enable-debug-sidecar
    Shorthand: ""
    Usage: Inject a debug sidecar for data plane debugging
  - DefaultValue: ""
    Name: enable-external-profiles
    Shorthand: ""
    Usage: Enable service profiles for non-Kubernetes services
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for inject
  - DefaultValue: ""
    Name: ignore-cluster
    Shorthand: ""
    Usage: |
      Ignore the current Kubernetes cluster when checking for existing cluster configuration (default false)
  - DefaultValue: ""
    Name: image-pull-policy
    Shorthand: ""
    Usage: Docker image pull policy
  - DefaultValue: ""
    Name: inbound-port
    Shorthand: ""
    Usage: Proxy port to use for inbound traffic
  - DefaultValue: ""
    Name: ingress
    Shorthand: ""
    Usage: Enable ingress mode in the linkerd proxy
  - DefaultValue: ""
    Name: init-image
    Shorthand: ""
    Usage: Linkerd init container image name
  - DefaultValue: ""
    Name: init-image-version
    Shorthand: ""
    Usage: Linkerd init container image version
  - DefaultValue: ""
    Name: manual
    Shorthand: ""
    Usage: |
      Include the proxy sidecar container spec in the YAML output (the auto-injector won't pick it up, so config annotations aren't supported) (default false)
  - DefaultValue: ""
    Name: opaque-ports
    Shorthand: ""
    Usage: Set opaque ports on the proxy
  - DefaultValue: ""
    Name: outbound-port
    Shorthand: ""
    Usage: Proxy port to use for outbound traffic
  - DefaultValue: ""
    Name: proxy-cpu
    Shorthand: ""
    Usage: Amount of CPU units that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-cpu-limit
    Shorthand: ""
    Usage: Maximum amount of CPU units that the proxy sidecar can use
  - DefaultValue: ""
    Name: proxy-cpu-request
    Shorthand: ""
    Usage: Amount of CPU units that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-image
    Shorthand: ""
    Usage: Linkerd proxy container image name
  - DefaultValue: ""
    Name: proxy-log-level
    Shorthand: ""
    Usage: Log level for the proxy
  - DefaultValue: ""
    Name: proxy-memory
    Shorthand: ""
    Usage: Amount of Memory that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-memory-limit
    Shorthand: ""
    Usage: Maximum amount of Memory that the proxy sidecar can use
  - DefaultValue: ""
    Name: proxy-memory-request
    Shorthand: ""
    Usage: Amount of Memory that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-uid
    Shorthand: ""
    Usage: Run the proxy under this user ID
  - DefaultValue: ""
    Name: proxy-version
    Shorthand: v
    Usage: Tag to be used for the Linkerd proxy images
  - DefaultValue: ""
    Name: registry
    Shorthand: ""
    Usage: |
      Docker registry to pull images from ($LINKERD_DOCKER_REGISTRY)
  - DefaultValue: ""
    Name: require-identity-on-inbound-ports
    Shorthand: ""
    Usage: Inbound ports on which the proxy should require identity
  - DefaultValue: ""
    Name: skip-inbound-ports
    Shorthand: ""
    Usage: |
      Ports and/or port ranges (inclusive) that should skip the proxy and send directly to the application
  - DefaultValue: ""
    Name: skip-outbound-ports
    Shorthand: ""
    Usage: |
      Outbound ports and/or port ranges (inclusive) that should skip the proxy
  - DefaultValue: ""
    Name: wait-before-exit-seconds
    Shorthand: ""
    Usage: |
      The period during which the proxy sidecar must stay alive while its pod is terminating. Must be smaller than terminationGracePeriodSeconds for the pod (default 0)
  SeeAlso: null
  Synopsis: Add the Linkerd proxy to a Kubernetes config
- Description: |-
    Output Kubernetes configs to install Linkerd.

    This command provides all Kubernetes configs necessary to install the Linkerd
    control plane.
  Example: |2-
      # Install CRDs first.
      linkerd install --crds | kubectl apply -f -

      # Install the core control plane.
      linkerd install | kubectl apply -f -

    The installation can be configured by using the --set, --values, --set-string and --set-file flags.
    A full list of configurable values can be found at https://artifacthub.io/packages/helm/linkerd2/linkerd-control-plane#values
  InheritedOptions: null
  Name: install
  Options:
  - DefaultValue: ""
    Name: admin-port
    Shorthand: ""
    Usage: Proxy port to serve metrics on
  - DefaultValue: ""
    Name: cluster-domain
    Shorthand: ""
    Usage: Set custom cluster domain
  - DefaultValue: ""
    Name: control-plane-tracing
    Shorthand: ""
    Usage: Enables Control Plane Tracing with the defaults
  - DefaultValue: ""
    Name: control-plane-tracing-namespace
    Shorthand: ""
    Usage: |
      Send control plane traces to Linkerd-Jaeger extension in this namespace
  - DefaultValue: ""
    Name: control-port
    Shorthand: ""
    Usage: Proxy port to use for control
  - DefaultValue: ""
    Name: controller-log-level
    Shorthand: ""
    Usage: Log level for the controller and web components
  - DefaultValue: ""
    Name: controller-replicas
    Shorthand: ""
    Usage: Replicas of the controller to deploy
  - DefaultValue: ""
    Name: controller-uid
    Shorthand: ""
    Usage: Run the control plane components under this user ID
  - DefaultValue: ""
    Name: crds
    Shorthand: ""
    Usage: Install Linkerd CRDs
  - DefaultValue: ""
    Name: default-inbound-policy
    Shorthand: ""
    Usage: Inbound policy to use to control inbound access to the proxy
  - DefaultValue: ""
    Name: disable-h2-upgrade
    Shorthand: ""
    Usage: |
      Prevents the controller from instructing proxies to perform transparent HTTP/2 upgrading (default false)
  - DefaultValue: ""
    Name: disable-heartbeat
    Shorthand: ""
    Usage: Disables the heartbeat cronjob (default false)
  - DefaultValue: ""
    Name: enable-endpoint-slices
    Shorthand: ""
    Usage: |
      Enables the usage of EndpointSlice informers and resources for destination service
  - DefaultValue: ""
    Name: enable-external-profiles
    Shorthand: ""
    Usage: Enable service profiles for non-Kubernetes services
  - DefaultValue: ""
    Name: ha
    Shorthand: ""
    Usage: |
      Enable HA deployment config for the control plane (default false)
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for install
  - DefaultValue: ""
    Name: identity-clock-skew-allowance
    Shorthand: ""
    Usage: |
      The amount of time to allow for clock skew within a Linkerd cluster
  - DefaultValue: ""
    Name: identity-external-ca
    Shorthand: ""
    Usage: Whether to use an external CA provider (default false)
  - DefaultValue: ""
    Name: identity-external-issuer
    Shorthand: ""
    Usage: Whether to use an external identity issuer (default false)
  - DefaultValue: ""
    Name: identity-issuance-lifetime
    Shorthand: ""
    Usage: |
      The amount of time for which the Identity issuer should certify identity
  - DefaultValue: ""
    Name: identity-issuer-certificate-file
    Shorthand: ""
    Usage: |
      A path to a PEM-encoded file containing the Linkerd Identity issuer certificate (generated by default)
  - DefaultValue: ""
    Name: identity-issuer-key-file
    Shorthand: ""
    Usage: |
      A path to a PEM-encoded file containing the Linkerd Identity issuer private key (generated by default)
  - DefaultValue: ""
    Name: identity-trust-anchors-file
    Shorthand: ""
    Usage: |
      A path to a PEM-encoded file containing Linkerd Identity trust anchors (generated by default)
  - DefaultValue: ""
    Name: identity-trust-domain
    Shorthand: ""
    Usage: Configures the name suffix used for identities.
  - DefaultValue: ""
    Name: ignore-cluster
    Shorthand: ""
    Usage: |
      Ignore the current Kubernetes cluster when checking for existing cluster configuration (default false)
  - DefaultValue: ""
    Name: image-pull-policy
    Shorthand: ""
    Usage: Docker image pull policy
  - DefaultValue: ""
    Name: inbound-port
    Shorthand: ""
    Usage: Proxy port to use for inbound traffic
  - DefaultValue: ""
    Name: init-image
    Shorthand: ""
    Usage: Linkerd init container image name
  - DefaultValue: ""
    Name: init-image-version
    Shorthand: ""
    Usage: Linkerd init container image version
  - DefaultValue: ""
    Name: linkerd-cni-enabled
    Shorthand: ""
    Usage: |
      Omit the NET_ADMIN capability in the PSP and the proxy-init container when injecting the proxy; requires the linkerd-cni plugin to already be installed
  - DefaultValue: ""
    Name: outbound-port
    Shorthand: ""
    Usage: Proxy port to use for outbound traffic
  - DefaultValue: ""
    Name: proxy-cpu
    Shorthand: ""
    Usage: Amount of CPU units that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-cpu-limit
    Shorthand: ""
    Usage: Maximum amount of CPU units that the proxy sidecar can use
  - DefaultValue: ""
    Name: proxy-cpu-request
    Shorthand: ""
    Usage: Amount of CPU units that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-image
    Shorthand: ""
    Usage: Linkerd proxy container image name
  - DefaultValue: ""
    Name: proxy-log-level
    Shorthand: ""
    Usage: Log level for the proxy
  - DefaultValue: ""
    Name: proxy-memory
    Shorthand: ""
    Usage: Amount of Memory that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-memory-limit
    Shorthand: ""
    Usage: Maximum amount of Memory that the proxy sidecar can use
  - DefaultValue: ""
    Name: proxy-memory-request
    Shorthand: ""
    Usage: Amount of Memory that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-uid
    Shorthand: ""
    Usage: Run the proxy under this user ID
  - DefaultValue: ""
    Name: proxy-version
    Shorthand: v
    Usage: Tag to be used for the Linkerd proxy images
  - DefaultValue: ""
    Name: registry
    Shorthand: ""
    Usage: |
      Docker registry to pull images from ($LINKERD_DOCKER_REGISTRY)
  - DefaultValue: ""
    Name: set
    Shorthand: ""
    Usage: |
      set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: set-file
    Shorthand: ""
    Usage: |
      set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)
  - DefaultValue: ""
    Name: set-string
    Shorthand: ""
    Usage: |
      set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: skip-inbound-ports
    Shorthand: ""
    Usage: |
      Ports and/or port ranges (inclusive) that should skip the proxy and send directly to the application
  - DefaultValue: ""
    Name: skip-outbound-ports
    Shorthand: ""
    Usage: |
      Outbound ports and/or port ranges (inclusive) that should skip the proxy
  - DefaultValue: ""
    Name: values
    Shorthand: f
    Usage: |
      specify values in a YAML file or a URL (can specify multiple)
  SeeAlso: null
  Synopsis: Output Kubernetes configs to install Linkerd
- Description: |-
    Output Kubernetes configs to install Linkerd CNI.

    This command installs a DaemonSet into the Linkerd control plane. The DaemonSet
    copies the necessary linkerd-cni plugin binaries and configs onto the host. It
    assumes that the 'linkerd install' command will be executed with the
    '--linkerd-cni-enabled' flag. This command needs to be executed before the
    'linkerd install --linkerd-cni-enabled' command.

    The installation can be configured by using the --set, --values, --set-string and --set-file flags. A full list of configurable values can be found at https://artifacthub.io/packages/helm/linkerd2/linkerd2-cni#values
  Example: ""
  InheritedOptions: null
  Name: install-cni
  Options:
  - DefaultValue: ""
    Name: admin-port
    Shorthand: ""
    Usage: Proxy port to serve metrics on
  - DefaultValue: ""
    Name: cni-image
    Shorthand: ""
    Usage: Image for the cni-plugin
  - DefaultValue: ""
    Name: cni-image-version
    Shorthand: ""
    Usage: Image Version for the cni-plugin
  - DefaultValue: ""
    Name: cni-log-level
    Shorthand: ""
    Usage: Log level for the cni-plugin
  - DefaultValue: ""
    Name: control-port
    Shorthand: ""
    Usage: Proxy port to use for control
  - DefaultValue: ""
    Name: dest-cni-bin-dir
    Shorthand: ""
    Usage: Directory on the host where the CNI binary will be placed
  - DefaultValue: ""
    Name: dest-cni-net-dir
    Shorthand: ""
    Usage: |
      Directory on the host where the CNI configuration will be placed
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for install-cni
  - DefaultValue: ""
    Name: inbound-port
    Shorthand: ""
    Usage: Proxy port to use for inbound traffic
  - DefaultValue: ""
    Name: linkerd-version
    Shorthand: v
    Usage: Tag to be used for Linkerd images
  - DefaultValue: ""
    Name: outbound-port
    Shorthand: ""
    Usage: Proxy port to use for outbound traffic
  - DefaultValue: ""
    Name: priority-class-name
    Shorthand: ""
    Usage: Pod priorityClassName for CNI daemonset's pods
  - DefaultValue: ""
    Name: proxy-uid
    Shorthand: ""
    Usage: Run the proxy under this user ID
  - DefaultValue: ""
    Name: redirect-ports
    Shorthand: ""
    Usage: |
      Ports to redirect to proxy, if no port is specified then ALL ports are redirected
  - DefaultValue: ""
    Name: registry
    Shorthand: ""
    Usage: |
      Docker registry to pull images from ($LINKERD_DOCKER_REGISTRY)
  - DefaultValue: ""
    Name: set
    Shorthand: ""
    Usage: |
      set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: set-file
    Shorthand: ""
    Usage: |
      set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)
  - DefaultValue: ""
    Name: set-string
    Shorthand: ""
    Usage: |
      set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: skip-inbound-ports
    Shorthand: ""
    Usage: |
      Ports and/or port ranges (inclusive) that should skip the proxy and send directly to the application
  - DefaultValue: ""
    Name: skip-outbound-ports
    Shorthand: ""
    Usage: |
      Outbound ports and/or port ranges (inclusive) that should skip the proxy
  - DefaultValue: ""
    Name: use-wait-flag
    Shorthand: ""
    Usage: |
      Configures the CNI plugin to use the "-w" flag for the iptables command. (default false)
  - DefaultValue: ""
    Name: values
    Shorthand: f
    Usage: |
      specify values in a YAML file or a URL (can specify multiple)
  SeeAlso: null
  Synopsis: Output Kubernetes configs to install Linkerd CNI
- Description: |-
    Check the Jaeger extension for potential problems.

    The check command will perform a series of checks to validate that the Jaeger
    extension is configured correctly. If the command encounters a failure it will
    print additional information about the failure and exit with a non-zero exit
    code.
  Example: |2-
      # Check that the Jaeger extension is up and running
      linkerd jaeger check
  InheritedOptions: null
  Name: jaeger check
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for check
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: |
      Namespace to use for --proxy checks (default: all namespaces)
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format. One of: table, json, short'
  - DefaultValue: ""
    Name: proxy
    Shorthand: ""
    Usage: |
      Also run data-plane checks, to determine if the data plane is healthy
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: Maximum allowed time for all tests to pass
  SeeAlso: null
  Synopsis: Check the Jaeger extension for potential problems
- Description: ""
  Example: ""
  InheritedOptions: null
  Name: jaeger dashboard
  Options:
  - DefaultValue: ""
    Name: address
    Shorthand: ""
    Usage: The address at which to serve requests
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for dashboard
  - DefaultValue: ""
    Name: port
    Shorthand: p
    Usage: |
      The local port on which to serve requests (when set to 0, a random port will be used)
  - DefaultValue: ""
    Name: show-url
    Shorthand: ""
    Usage: show only URL in the CLI, and do not open the browser
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: |
      Wait for dashboard to become available if it's not available when the command is run
  SeeAlso: null
  Synopsis: Open the Jaeger extension dashboard in a web browser
- Description: Output Kubernetes resources to install jaeger extension.
  Example: "  # Default install.\n  linkerd jaeger install | kubectl apply -f -\n
    \ # Install Jaeger extension into a non-default namespace.\n  linkerd jaeger install
    --namespace custom | kubectl apply -f -\n\nThe installation can be configured
    by using the --set, --values, --set-string and --set-file flags.\nA full list
    of configurable values can be found at https://www.github.com/linkerd/linkerd2/tree/main/jaeger/charts/linkerd-jaeger/README.md\n
    \ "
  InheritedOptions: null
  Name: jaeger install
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for install
  - DefaultValue: ""
    Name: ignore-cluster
    Shorthand: ""
    Usage: |
      Ignore the current Kubernetes cluster when checking for existing cluster configuration (default false)
  - DefaultValue: ""
    Name: registry
    Shorthand: ""
    Usage: |
      Docker registry to pull jaeger-webhook image from ($LINKERD_DOCKER_REGISTRY)
  - DefaultValue: ""
    Name: set
    Shorthand: ""
    Usage: |
      set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: set-file
    Shorthand: ""
    Usage: |
      set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)
  - DefaultValue: ""
    Name: set-string
    Shorthand: ""
    Usage: |
      set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: skip-checks
    Shorthand: ""
    Usage: Skip checks for linkerd core control-plane existence
  - DefaultValue: ""
    Name: values
    Shorthand: f
    Usage: |
      specify values in a YAML file or a URL (can specify multiple)
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: Wait for core control-plane components to be available
  SeeAlso: null
  Synopsis: Output Kubernetes resources to install jaeger extension
- Description: ""
  Example: ""
  InheritedOptions: null
  Name: jaeger list
  Options:
  - DefaultValue: ""
    Name: all-namespaces
    Shorthand: A
    Usage: If present, list pods across all namespaces
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for list
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: The namespace to list pods in
  SeeAlso: null
  Synopsis: Lists which pods have tracing enabled
- Description: |
    Output extraneous Kubernetes resources in the linkerd-jaeger extension.
  Example: "  # Prune extraneous resources.\n  linkerd jaeger prune | kubectl delete
    -f -\n  "
  InheritedOptions: null
  Name: jaeger prune
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for prune
  - DefaultValue: ""
    Name: set
    Shorthand: ""
    Usage: |
      set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: set-file
    Shorthand: ""
    Usage: |
      set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)
  - DefaultValue: ""
    Name: set-string
    Shorthand: ""
    Usage: |
      set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: values
    Shorthand: f
    Usage: |
      specify values in a YAML file or a URL (can specify multiple)
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: Wait for extension components to be available
  SeeAlso: null
  Synopsis: |
    Output extraneous Kubernetes resources in the linkerd-jaeger extension
- Description: |-
    Output Kubernetes resources to uninstall the Linkerd-jaeger extension.

    This command provides all Kubernetes namespace-scoped and cluster-scoped resources (e.g services, deployments, RBACs, etc.) necessary to uninstall the Linkerd-jaeger extension.
  Example: linkerd uninstall | kubectl delete -f -
  InheritedOptions: null
  Name: jaeger uninstall
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for uninstall
  SeeAlso: null
  Synopsis: |
    Output Kubernetes resources to uninstall the Linkerd-jaeger extension
- Description: jaeger manages the jaeger extension of Linkerd service mesh.
  Example: ""
  InheritedOptions: null
  Name: jaeger
  Options:
  - DefaultValue: ""
    Name: api-addr
    Shorthand: ""
    Usage: |
      Override kubeconfig and communicate directly with the control plane at host:port (mostly for testing)
  - DefaultValue: ""
    Name: as
    Shorthand: ""
    Usage: Username to impersonate for Kubernetes operations
  - DefaultValue: ""
    Name: as-group
    Shorthand: ""
    Usage: Group to impersonate for Kubernetes operations
  - DefaultValue: ""
    Name: context
    Shorthand: ""
    Usage: Name of the kubeconfig context to use
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for jaeger
  - DefaultValue: ""
    Name: kubeconfig
    Shorthand: ""
    Usage: Path to the kubeconfig file to use for CLI requests
  - DefaultValue: ""
    Name: linkerd-namespace
    Shorthand: L
    Usage: Namespace in which Linkerd is installed
  - DefaultValue: ""
    Name: verbose
    Shorthand: ""
    Usage: Turn on debug logging
  SeeAlso: null
  Synopsis: jaeger manages the jaeger extension of Linkerd service mesh
- Description: ""
  Example: ""
  InheritedOptions: null
  Name: multicluster allow
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for allow
  - DefaultValue: ""
    Name: ignore-cluster
    Shorthand: ""
    Usage: Ignore cluster configuration
  - DefaultValue: ""
    Name: namespace
    Shorthand: ""
    Usage: The destination namespace for the service account.
  - DefaultValue: ""
    Name: service-account-name
    Shorthand: ""
    Usage: The name of the multicluster access service account
  SeeAlso: null
  Synopsis: |
    Outputs credential resources that allow service-mirror controllers to connect to this cluster
- Description: |-
    Check the multicluster extension for potential problems.

    The check command will perform a series of checks to validate that the
    multicluster extension is configured correctly. If the command encounters a
    failure it will print additional information about the failure and exit with a
    non-zero exit code.
  Example: |2-
      # Check that the multicluster extension is configured correctly
      linkerd multicluster check
  InheritedOptions: null
  Name: multicluster check
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for check
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: ""
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format. One of: table, json, short'
  - DefaultValue: ""
    Name: proxy
    Shorthand: ""
    Usage: ""
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: Maximum allowed time for all tests to pass
  SeeAlso: null
  Synopsis: Check the multicluster extension for potential problems
- Description: ""
  Example: ""
  InheritedOptions: null
  Name: multicluster gateways
  Options:
  - DefaultValue: ""
    Name: cluster-name
    Shorthand: ""
    Usage: the name of the target cluster
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for gateways
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: used to print output in different format
  - DefaultValue: ""
    Name: wait
    Shorthand: w
    Usage: time allowed to fetch diagnostics
  SeeAlso: null
  Synopsis: |
    Display stats information about the gateways in target clusters
- Description: ""
  Example: "  # Default install.\n  linkerd multicluster install | kubectl apply -f
    -\n\nThe installation can be configured by using the --set, --values, --set-string
    and --set-file flags.\nA full list of configurable values can be found at https://github.com/linkerd/linkerd2/blob/main/multicluster/charts/linkerd-multicluster/README.md\n
    \ "
  InheritedOptions: null
  Name: multicluster install
  Options:
  - DefaultValue: ""
    Name: gateway
    Shorthand: ""
    Usage: If the gateway component should be installed
  - DefaultValue: ""
    Name: gateway-port
    Shorthand: ""
    Usage: The port on the gateway used for all incoming traffic
  - DefaultValue: ""
    Name: gateway-probe-port
    Shorthand: ""
    Usage: The liveness check port of the gateway
  - DefaultValue: ""
    Name: gateway-probe-seconds
    Shorthand: ""
    Usage: |
      The interval at which the gateway will be checked for being alive in seconds
  - DefaultValue: ""
    Name: gateway-service-type
    Shorthand: ""
    Usage: Overwrite Service type for gateway service
  - DefaultValue: ""
    Name: ha
    Shorthand: ""
    Usage: Install multicluster extension in High Availability mode.
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for install
  - DefaultValue: ""
    Name: ignore-cluster
    Shorthand: ""
    Usage: |
      Ignore the current Kubernetes cluster when checking for existing cluster configuration (default false)
  - DefaultValue: ""
    Name: service-mirror-credentials
    Shorthand: ""
    Usage: |
      Whether to install the service account which can be used by service mirror components in source clusters to discover exported services
  - DefaultValue: ""
    Name: set
    Shorthand: ""
    Usage: |
      set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: set-file
    Shorthand: ""
    Usage: |
      set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)
  - DefaultValue: ""
    Name: set-string
    Shorthand: ""
    Usage: |
      set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: values
    Shorthand: f
    Usage: |
      specify values in a YAML file or a URL (can specify multiple)
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: Wait for core control-plane components to be available
  SeeAlso: null
  Synopsis: |
    Output Kubernetes configs to install the Linkerd multicluster add-on
- Description: |-
    Outputs resources that allow another cluster to mirror services from this one.

    Note that the Link resource applies only in one direction. In order for two
    clusters to mirror each other, a Link resource will have to be generated for
    each cluster and applied to the other.
  Example: "  # To link the west cluster to east\n  linkerd --context=east multicluster
    link --cluster-name east | kubectl --context=west apply -f -\n\nThe command can
    be configured by using the --set, --values, --set-string and --set-file flags.\nA
    full list of configurable values can be found at https://github.com/linkerd/linkerd2/blob/main/multicluster/charts/linkerd-multicluster-link/README.md\n
    \ "
  InheritedOptions: null
  Name: multicluster link
  Options:
  - DefaultValue: ""
    Name: api-server-address
    Shorthand: ""
    Usage: The api server address of the target cluster
  - DefaultValue: ""
    Name: cluster-name
    Shorthand: ""
    Usage: Cluster name
  - DefaultValue: ""
    Name: control-plane-version
    Shorthand: ""
    Usage: |
      (Development) Tag to be used for the service mirror controller image
  - DefaultValue: ""
    Name: gateway
    Shorthand: ""
    Usage: |
      If false, allows a link to be created against a cluster that does not have a gateway service (default true)
  - DefaultValue: ""
    Name: gateway-addresses
    Shorthand: ""
    Usage: |
      If specified, overwrites gateway addresses when gateway service is not type LoadBalancer (comma separated list)
  - DefaultValue: ""
    Name: gateway-name
    Shorthand: ""
    Usage: The name of the gateway service
  - DefaultValue: ""
    Name: gateway-namespace
    Shorthand: ""
    Usage: The namespace of the gateway service
  - DefaultValue: ""
    Name: gateway-port
    Shorthand: ""
    Usage: |
      If specified, overwrites gateway port when gateway service is not type LoadBalancer
  - DefaultValue: ""
    Name: ha
    Shorthand: ""
    Usage: |
      Enable HA configuration for the service-mirror deployment (default false)
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for link
  - DefaultValue: ""
    Name: log-format
    Shorthand: ""
    Usage: Log format for the Multicluster components
  - DefaultValue: ""
    Name: log-level
    Shorthand: ""
    Usage: Log level for the Multicluster components
  - DefaultValue: ""
    Name: namespace
    Shorthand: ""
    Usage: The namespace for the service account
  - DefaultValue: ""
    Name: registry
    Shorthand: ""
    Usage: |
      Docker registry to pull service mirror controller image from ($LINKERD_DOCKER_REGISTRY)
  - DefaultValue: ""
    Name: remote-discovery-selector
    Shorthand: ""
    Usage: |
      Selector (label query) to filter which services in the target cluster to mirror in remote discovery mode
  - DefaultValue: ""
    Name: selector
    Shorthand: l
    Usage: |
      Selector (label query) to filter which services in the target cluster to mirror
  - DefaultValue: ""
    Name: service-account-name
    Shorthand: ""
    Usage: |
      The name of the service account associated with the credentials
  - DefaultValue: ""
    Name: service-mirror-retry-limit
    Shorthand: ""
    Usage: |
      The number of times a failed update from the target cluster is allowed to be retried
  - DefaultValue: ""
    Name: set
    Shorthand: ""
    Usage: |
      set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: set-file
    Shorthand: ""
    Usage: |
      set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)
  - DefaultValue: ""
    Name: set-string
    Shorthand: ""
    Usage: |
      set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: values
    Shorthand: f
    Usage: |
      specify values in a YAML file or a URL (can specify multiple)
  SeeAlso: null
  Synopsis: |
    Outputs resources that allow another cluster to mirror services from this one
- Description: ""
  Example: ""
  InheritedOptions: null
  Name: multicluster uninstall
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for uninstall
  SeeAlso: null
  Synopsis: |
    Output Kubernetes configs to uninstall the Linkerd multicluster add-on
- Description: ""
  Example: ""
  InheritedOptions: null
  Name: multicluster unlink
  Options:
  - DefaultValue: ""
    Name: cluster-name
    Shorthand: ""
    Usage: Cluster name
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for unlink
  - DefaultValue: ""
    Name: namespace
    Shorthand: ""
    Usage: The namespace for the service account
  SeeAlso: null
  Synopsis: Outputs link resources for deletion
- Description: |-
    Manages the multicluster setup for Linkerd.

    This command provides subcommands to manage the multicluster support
    functionality of Linkerd. You can use it to install the service mirror
    components on a cluster, manage credentials and link clusters together.
  Example: |2-
      # Install multicluster addons.
      linkerd --context=cluster-a multicluster install | kubectl --context=cluster-a apply -f -

      # Extract mirroring cluster credentials from cluster A and install them on cluster B
      linkerd --context=cluster-a multicluster link --cluster-name=target | kubectl apply --context=cluster-b -f -
  InheritedOptions: null
  Name: multicluster
  Options:
  - DefaultValue: ""
    Name: api-addr
    Shorthand: ""
    Usage: |
      Override kubeconfig and communicate directly with the control plane at host:port (mostly for testing)
  - DefaultValue: ""
    Name: as
    Shorthand: ""
    Usage: Username to impersonate for Kubernetes operations
  - DefaultValue: ""
    Name: as-group
    Shorthand: ""
    Usage: Group to impersonate for Kubernetes operations
  - DefaultValue: ""
    Name: context
    Shorthand: ""
    Usage: Name of the kubeconfig context to use
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for multicluster
  - DefaultValue: ""
    Name: kubeconfig
    Shorthand: ""
    Usage: Path to the kubeconfig file to use for CLI requests
  - DefaultValue: ""
    Name: linkerd-namespace
    Shorthand: L
    Usage: Namespace in which Linkerd is installed
  - DefaultValue: ""
    Name: verbose
    Shorthand: ""
    Usage: Turn on debug logging
  SeeAlso: null
  Synopsis: Manages the multicluster setup for Linkerd
- Description: Output service profile config for Kubernetes.
  Example: |2
      # Output a basic template to apply after modification.
      linkerd profile -n emojivoto --template web-svc

      # Generate a profile from an OpenAPI specification.
      linkerd profile -n emojivoto --open-api web-svc.swagger web-svc

      # Generate a profile from a protobuf definition.
      linkerd profile -n emojivoto --proto Voting.proto vote-svc
  InheritedOptions: null
  Name: profile
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for profile
  - DefaultValue: ""
    Name: ignore-cluster
    Shorthand: ""
    Usage: Output a service profile through offline generation
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of the service
  - DefaultValue: ""
    Name: open-api
    Shorthand: ""
    Usage: |
      Output a service profile based on the given OpenAPI spec file
  - DefaultValue: ""
    Name: proto
    Shorthand: ""
    Usage: |
      Output a service profile based on the given Protobuf spec file
  - DefaultValue: ""
    Name: template
    Shorthand: ""
    Usage: Output a service profile template
  SeeAlso: null
  Synopsis: Output service profile config for Kubernetes
- Description: |
    Output extraneous Kubernetes resources in the linkerd control plane.
  Example: "  # Prune extraneous resources.\n  linkerd prune | kubectl delete -f -\n
    \ "
  InheritedOptions: null
  Name: prune
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for prune
  SeeAlso: null
  Synopsis: |
    Output extraneous Kubernetes resources in the linkerd control plane
- Description: |-
    Remove the Linkerd proxy from a Kubernetes config.

    You can uninject resources contained in a single file, inside a folder and its
    sub-folders, or coming from stdin.
  Example: |2-
      # Uninject all the deployments in the default namespace.
      kubectl get deploy -o yaml | linkerd uninject - | kubectl apply -f -

      # Download a resource and uninject it through stdin.
      curl http://url.to/yml | linkerd uninject - | kubectl apply -f -

      # Uninject all the resources inside a folder and its sub-folders.
      linkerd uninject <folder> | kubectl apply -f -
  InheritedOptions: null
  Name: uninject
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for uninject
  SeeAlso: null
  Synopsis: Remove the Linkerd proxy from a Kubernetes config
- Description: |-
    Output Kubernetes resources to uninstall Linkerd control plane.

    This command provides all Kubernetes namespace-scoped and cluster-scoped resources (e.g services, deployments, RBACs, etc.) necessary to uninstall Linkerd control plane.
  Example: ' linkerd uninstall | kubectl delete -f -'
  InheritedOptions: null
  Name: uninstall
  Options:
  - DefaultValue: ""
    Name: force
    Shorthand: f
    Usage: |
      Force uninstall even if there exist non-control-plane injected pods
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for uninstall
  SeeAlso: null
  Synopsis: |
    Output Kubernetes resources to uninstall Linkerd control plane
- Description: |
    Output Kubernetes configs to upgrade an existing Linkerd control plane.

    Note that the default flag values for this command come from the Linkerd control
    plane. The default values displayed in the Flags section below only apply to the
    install command.

    The upgrade can be configured by using the --set, --values, --set-string and --set-file flags.
    A full list of configurable values can be found at https://www.github.com/linkerd/linkerd2/tree/main/charts/linkerd2/README.md
  Example: |2-
      # Upgrade CRDs first
      linkerd upgrade --crds | kubectl apply -f -

      # Then upgrade the control plane
      linkerd upgrade | kubectl apply -f -

      # And lastly, remove linkerd resources that no longer exist in the current version
      linkerd prune | kubectl delete -f -
  InheritedOptions: null
  Name: upgrade
  Options:
  - DefaultValue: ""
    Name: admin-port
    Shorthand: ""
    Usage: Proxy port to serve metrics on
  - DefaultValue: ""
    Name: control-plane-tracing
    Shorthand: ""
    Usage: Enables Control Plane Tracing with the defaults
  - DefaultValue: ""
    Name: control-plane-tracing-namespace
    Shorthand: ""
    Usage: |
      Send control plane traces to Linkerd-Jaeger extension in this namespace
  - DefaultValue: ""
    Name: control-port
    Shorthand: ""
    Usage: Proxy port to use for control
  - DefaultValue: ""
    Name: controller-log-level
    Shorthand: ""
    Usage: Log level for the controller and web components
  - DefaultValue: ""
    Name: controller-replicas
    Shorthand: ""
    Usage: Replicas of the controller to deploy
  - DefaultValue: ""
    Name: controller-uid
    Shorthand: ""
    Usage: Run the control plane components under this user ID
  - DefaultValue: ""
    Name: crds
    Shorthand: ""
    Usage: Upgrade Linkerd CRDs
  - DefaultValue: ""
    Name: default-inbound-policy
    Shorthand: ""
    Usage: Inbound policy to use to control inbound access to the proxy
  - DefaultValue: ""
    Name: disable-h2-upgrade
    Shorthand: ""
    Usage: |
      Prevents the controller from instructing proxies to perform transparent HTTP/2 upgrading (default false)
  - DefaultValue: ""
    Name: disable-heartbeat
    Shorthand: ""
    Usage: Disables the heartbeat cronjob (default false)
  - DefaultValue: ""
    Name: enable-endpoint-slices
    Shorthand: ""
    Usage: |
      Enables the usage of EndpointSlice informers and resources for destination service
  - DefaultValue: ""
    Name: enable-external-profiles
    Shorthand: ""
    Usage: Enable service profiles for non-Kubernetes services
  - DefaultValue: ""
    Name: force
    Shorthand: ""
    Usage: |
      Force upgrade operation even when issuer certificate does not work with the trust anchors of all proxies
  - DefaultValue: ""
    Name: from-manifests
    Shorthand: ""
    Usage: |
      Read config from a Linkerd install YAML rather than from Kubernetes
  - DefaultValue: ""
    Name: ha
    Shorthand: ""
    Usage: |
      Enable HA deployment config for the control plane (default false)
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for upgrade
  - DefaultValue: ""
    Name: identity-clock-skew-allowance
    Shorthand: ""
    Usage: |
      The amount of time to allow for clock skew within a Linkerd cluster
  - DefaultValue: ""
    Name: identity-issuance-lifetime
    Shorthand: ""
    Usage: |
      The amount of time for which the Identity issuer should certify identity
  - DefaultValue: ""
    Name: identity-issuer-certificate-file
    Shorthand: ""
    Usage: |
      A path to a PEM-encoded file containing the Linkerd Identity issuer certificate (generated by default)
  - DefaultValue: ""
    Name: identity-issuer-key-file
    Shorthand: ""
    Usage: |
      A path to a PEM-encoded file containing the Linkerd Identity issuer private key (generated by default)
  - DefaultValue: ""
    Name: identity-trust-anchors-file
    Shorthand: ""
    Usage: |
      A path to a PEM-encoded file containing Linkerd Identity trust anchors (generated by default)
  - DefaultValue: ""
    Name: image-pull-policy
    Shorthand: ""
    Usage: Docker image pull policy
  - DefaultValue: ""
    Name: inbound-port
    Shorthand: ""
    Usage: Proxy port to use for inbound traffic
  - DefaultValue: ""
    Name: init-image
    Shorthand: ""
    Usage: Linkerd init container image name
  - DefaultValue: ""
    Name: init-image-version
    Shorthand: ""
    Usage: Linkerd init container image version
  - DefaultValue: ""
    Name: linkerd-cni-enabled
    Shorthand: ""
    Usage: |
      Omit the NET_ADMIN capability in the PSP and the proxy-init container when injecting the proxy; requires the linkerd-cni plugin to already be installed
  - DefaultValue: ""
    Name: outbound-port
    Shorthand: ""
    Usage: Proxy port to use for outbound traffic
  - DefaultValue: ""
    Name: proxy-cpu
    Shorthand: ""
    Usage: Amount of CPU units that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-cpu-limit
    Shorthand: ""
    Usage: Maximum amount of CPU units that the proxy sidecar can use
  - DefaultValue: ""
    Name: proxy-cpu-request
    Shorthand: ""
    Usage: Amount of CPU units that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-image
    Shorthand: ""
    Usage: Linkerd proxy container image name
  - DefaultValue: ""
    Name: proxy-log-level
    Shorthand: ""
    Usage: Log level for the proxy
  - DefaultValue: ""
    Name: proxy-memory
    Shorthand: ""
    Usage: Amount of Memory that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-memory-limit
    Shorthand: ""
    Usage: Maximum amount of Memory that the proxy sidecar can use
  - DefaultValue: ""
    Name: proxy-memory-request
    Shorthand: ""
    Usage: Amount of Memory that the proxy sidecar requests
  - DefaultValue: ""
    Name: proxy-uid
    Shorthand: ""
    Usage: Run the proxy under this user ID
  - DefaultValue: ""
    Name: proxy-version
    Shorthand: v
    Usage: Tag to be used for the Linkerd proxy images
  - DefaultValue: ""
    Name: registry
    Shorthand: ""
    Usage: |
      Docker registry to pull images from ($LINKERD_DOCKER_REGISTRY)
  - DefaultValue: ""
    Name: set
    Shorthand: ""
    Usage: |
      set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: set-file
    Shorthand: ""
    Usage: |
      set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)
  - DefaultValue: ""
    Name: set-string
    Shorthand: ""
    Usage: |
      set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: skip-inbound-ports
    Shorthand: ""
    Usage: |
      Ports and/or port ranges (inclusive) that should skip the proxy and send directly to the application
  - DefaultValue: ""
    Name: skip-outbound-ports
    Shorthand: ""
    Usage: |
      Outbound ports and/or port ranges (inclusive) that should skip the proxy
  - DefaultValue: ""
    Name: values
    Shorthand: f
    Usage: |
      specify values in a YAML file or a URL (can specify multiple)
  SeeAlso: null
  Synopsis: |
    Output Kubernetes configs to upgrade an existing Linkerd control plane
- Description: ""
  Example: ""
  InheritedOptions: null
  Name: version
  Options:
  - DefaultValue: ""
    Name: client
    Shorthand: ""
    Usage: Print the client version only
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for version
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: |
      Namespace to use for --proxy versions (default: all namespaces)
  - DefaultValue: ""
    Name: proxy
    Shorthand: ""
    Usage: Print data-plane versions
  - DefaultValue: ""
    Name: short
    Shorthand: ""
    Usage: Print the version number(s) only, with no additional output
  SeeAlso: null
  Synopsis: Print the client and server version information
- Description: |
    Output Kubernetes resources to authorize Prometheus scrapes in a namespace or cluster with config.linkerd.io/default-inbound-policy: deny.
  Example: |-
    # Allow scrapes in the 'emojivoto' namespace
    linkerd viz allow-scrapes --namespace emojivoto | kubectl apply -f -
  InheritedOptions: null
  Name: viz allow-scrapes
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for allow-scrapes
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: The namespace in which to authorize Prometheus scrapes.
  SeeAlso: null
  Synopsis: Output Kubernetes resources to authorize Prometheus scrapes
- Description: Display stats for authorizations for a resource.
  Example: ""
  InheritedOptions: null
  Name: viz authz
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for authz
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of the specified resource
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format; one of: "table" or "json" or "wide"'
  - DefaultValue: ""
    Name: selector
    Shorthand: l
    Usage: |
      Selector (label query) to filter on, supports '=', '==', and '!='
  - DefaultValue: ""
    Name: time-window
    Shorthand: t
    Usage: |
      Stat window (for example: "15s", "1m", "10m", "1h"). Needs to be at least 15s.
  SeeAlso: null
  Synopsis: Display stats for authorizations for a resource
- Description: |-
    Check the Linkerd Viz extension for potential problems.

    The check command will perform a series of checks to validate that the Linkerd Viz
    extension is configured correctly. If the command encounters a failure it will
    print additional information about the failure and exit with a non-zero exit
    code.
  Example: |2-
      # Check that the viz extension is up and running
      linkerd viz check
  InheritedOptions: null
  Name: viz check
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for check
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: |
      Namespace to use for --proxy checks (default: all namespaces)
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format. One of: table, json, short'
  - DefaultValue: ""
    Name: proxy
    Shorthand: ""
    Usage: |
      Also run data-plane checks, to determine if the data plane is healthy
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: Maximum allowed time for all tests to pass
  SeeAlso: null
  Synopsis: Check the Linkerd Viz extension for potential problems
- Description: ""
  Example: ""
  InheritedOptions: null
  Name: viz dashboard
  Options:
  - DefaultValue: ""
    Name: address
    Shorthand: ""
    Usage: The address at which to serve requests
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for dashboard
  - DefaultValue: ""
    Name: port
    Shorthand: p
    Usage: |
      The local port on which to serve requests (when set to 0, a random port will be used)
  - DefaultValue: ""
    Name: show
    Shorthand: ""
    Usage: |
      Open a dashboard in a browser or show URLs in the CLI (one of: linkerd, grafana, url)
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: |
      Wait for dashboard to become available if it's not available when the command is run
  SeeAlso: null
  Synopsis: Open the Linkerd dashboard in a web browser
- Description: |-
    Display connections between resources, and Linkerd proxy identities.

      The RESOURCETYPE argument specifies the type of resource to display edges within.

      Examples:
      * cronjob
      * deploy
      * ds
      * job
      * po
      * rc
      * rs
      * sts

      Valid resource types include:
      * cronjobs
      * daemonsets
      * deployments
      * jobs
      * pods
      * replicasets
      * replicationcontrollers
      * statefulsets
  Example: |2-
      # Get all edges between pods that either originate from or terminate in the test namespace.
      linkerd viz edges po -n test

      # Get all edges between pods that either originate from or terminate in the default namespace.
      linkerd viz edges po

      # Get all edges between pods in all namespaces.
      linkerd viz edges po --all-namespaces
  InheritedOptions: null
  Name: viz edges
  Options:
  - DefaultValue: ""
    Name: all-namespaces
    Shorthand: A
    Usage: |
      If present, returns edges across all namespaces, ignoring the "--namespace" flag
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for edges
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of the specified resource
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format; one of: "table" or "json" or "wide"'
  SeeAlso: null
  Synopsis: |
    Display connections between resources, and Linkerd proxy identities
- Description: |
    Output Kubernetes resources to install linkerd-viz extension.
  Example: "  # Default install.\n  linkerd viz install | kubectl apply -f -\n\nThe
    installation can be configured by using the --set, --values, --set-string and
    --set-file flags.\nA full list of configurable values can be found at https://www.github.com/linkerd/linkerd2/tree/main/viz/charts/linkerd-viz/README.md\n
    \ "
  InheritedOptions: null
  Name: viz install
  Options:
  - DefaultValue: ""
    Name: ha
    Shorthand: ""
    Usage: Install Viz Extension in High Availability mode.
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for install
  - DefaultValue: ""
    Name: ignore-cluster
    Shorthand: ""
    Usage: |
      Ignore the current Kubernetes cluster when checking for existing cluster configuration (default false)
  - DefaultValue: ""
    Name: set
    Shorthand: ""
    Usage: |
      set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: set-file
    Shorthand: ""
    Usage: |
      set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)
  - DefaultValue: ""
    Name: set-string
    Shorthand: ""
    Usage: |
      set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: skip-checks
    Shorthand: ""
    Usage: Skip checks for linkerd core control-plane existence
  - DefaultValue: ""
    Name: values
    Shorthand: f
    Usage: |
      specify values in a YAML file or a URL (can specify multiple)
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: Wait for core control-plane components to be available
  SeeAlso: null
  Synopsis: Output Kubernetes resources to install linkerd-viz extension
- Description: ""
  Example: ""
  InheritedOptions: null
  Name: viz list
  Options:
  - DefaultValue: ""
    Name: all-namespaces
    Shorthand: A
    Usage: If present, list pods across all namespaces
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for list
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: The namespace to list pods in
  SeeAlso: null
  Synopsis: Lists which pods can be tapped
- Description: |
    Output service profile config for Kubernetes based off tap data.
  Example: |2
      # Generate a profile by watching live traffic.
      linkerd viz profile -n emojivoto web-svc --tap deploy/web --tap-duration 10s --tap-route-limit 5
  InheritedOptions: null
  Name: viz profile
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for profile
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of the service
  - DefaultValue: ""
    Name: tap
    Shorthand: ""
    Usage: |
      Output a service profile based on tap data for the given target resource
  - DefaultValue: ""
    Name: tap-duration
    Shorthand: ""
    Usage: |
      Duration over which tap data is collected (for example: "10s", "1m", "10m")
  - DefaultValue: ""
    Name: tap-route-limit
    Shorthand: ""
    Usage: Max number of routes to add to the profile
  SeeAlso: null
  Synopsis: |
    Output service profile config for Kubernetes based off tap data
- Description: |
    Output extraneous Kubernetes resources in the linkerd-viz extension.
  Example: "  # Prune extraneous resources.\n  linkerd viz prune | kubectl delete
    -f -\n  "
  InheritedOptions: null
  Name: viz prune
  Options:
  - DefaultValue: ""
    Name: ha
    Shorthand: ""
    Usage: |
      Set if Linkerd Viz Extension is installed in High Availability mode.
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for prune
  - DefaultValue: ""
    Name: set
    Shorthand: ""
    Usage: |
      set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: set-file
    Shorthand: ""
    Usage: |
      set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)
  - DefaultValue: ""
    Name: set-string
    Shorthand: ""
    Usage: |
      set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  - DefaultValue: ""
    Name: values
    Shorthand: f
    Usage: |
      specify values in a YAML file or a URL (can specify multiple)
  - DefaultValue: ""
    Name: wait
    Shorthand: ""
    Usage: Wait for extension components to be available
  SeeAlso: null
  Synopsis: |
    Output extraneous Kubernetes resources in the linkerd-viz extension
- Description: |-
    Display route stats.

    This command will only display traffic which is sent to a service that has a Service Profile defined.
  Example: |2-
      # Routes for the webapp service in the test namespace.
      linkerd viz routes service/webapp -n test

      # Routes for calls from the traffic deployment to the webapp service in the test namespace.
      linkerd viz routes deploy/traffic -n test --to svc/webapp
  InheritedOptions: null
  Name: viz routes
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for routes
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of the specified resource
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format; one of: "table", "wide", or "json"'
  - DefaultValue: ""
    Name: selector
    Shorthand: l
    Usage: |
      Selector (label query) to filter on, supports '=', '==', and '!='
  - DefaultValue: ""
    Name: time-window
    Shorthand: t
    Usage: 'Stat window (for example: "10s", "1m", "10m", "1h")'
  - DefaultValue: ""
    Name: to
    Shorthand: ""
    Usage: If present, shows outbound stats to the specified resource
  - DefaultValue: ""
    Name: to-namespace
    Shorthand: ""
    Usage: |
      Sets the namespace used to lookup the "--to" resource; by default the current "--namespace" is used
  SeeAlso: null
  Synopsis: Display route stats
- Description: |-
    Display traffic stats about one or many resources.

      The RESOURCES argument specifies the target resource(s) to aggregate stats over:
      (TYPE [NAME] | TYPE/NAME)
      or (TYPE [NAME1] [NAME2]...)
      or (TYPE1/NAME1 TYPE2/NAME2...)

      Examples:
      * cronjob/my-cronjob
      * deploy
      * deploy/my-deploy
      * deploy/ po/
      * ds/my-daemonset
      * job/my-job
      * ns/my-ns
      * po/mypod1 rc/my-replication-controller
      * po mypod1 mypod2
      * rc/my-replication-controller
      * rs
      * rs/my-replicaset
      * sts/my-statefulset
      * ts/my-split
      * authority
      * au/my-authority
      * httproute/my-route
      * route/my-route
      * all

      Valid resource types include:
      * cronjobs
      * daemonsets
      * deployments
      * namespaces
      * jobs
      * pods
      * replicasets
      * replicationcontrollers
      * statefulsets
      * authorities (not supported in --from)
      * authorizationpolicies (not supported in --from)
      * httproutes (not supported in --from)
      * services (not supported in --from)
      * servers (not supported in --from)
      * serverauthorizations (not supported in --from)
      * all (all resource types, not supported in --from or --to)

    This command will hide resources that have completed, such as pods that are in the Succeeded or Failed phases.
    If no resource name is specified, displays stats about all resources of the specified RESOURCETYPE
  Example: "  # Get all deployments in the test namespace.\n  linkerd viz stat deployments
    -n test\n\n  # Get the hello1 replication controller in the test namespace.\n
    \ linkerd viz stat replicationcontrollers hello1 -n test\n\n  # Get all namespaces.\n
    \ linkerd viz stat namespaces\n\n  # Get all inbound stats to the web deployment.\n
    \ linkerd viz stat deploy/web\n\n  # Get all inbound stats to the pod1 and pod2
    pods\n  linkerd viz stat po pod1 pod2\n\n  # Get all inbound stats to the pod1
    pod and the web deployment\n  linkerd viz stat po/pod1 deploy/web\n\n  # Get all
    pods in all namespaces that call the hello1 deployment in the test namespace.\n
    \ linkerd viz stat pods --to deploy/hello1 --to-namespace test --all-namespaces\n\n
    \ # Get all pods in all namespaces that call the hello1 service in the test namespace.\n
    \ linkerd viz stat pods --to svc/hello1 --to-namespace test --all-namespaces\n\n
    \ # Get the web service. With Services, metrics are generated from the outbound
    metrics\n  # of clients, and thus will not include unmeshed client request metrics.\n
    \ linkerd viz stat svc/web\n\n  # Get the web services and metrics for any traffic
    coming to the service from the hello1 deployment\n  # in the test namespace.\n
    \ linkerd viz stat svc/web --from deploy/hello1 --from-namespace test\n\n  # Get
    the web services and metrics for all the traffic that reaches the web-pod1 pod\n
    \ # in the test namespace exclusively.\n  linkerd viz stat svc/web --to pod/web-pod1
    --to-namespace test\n\n  # Get all services in all namespaces that receive calls
    from hello1 deployment in the test namespace.\n  linkerd viz stat services --from
    deploy/hello1 --from-namespace test --all-namespaces\n\n  # Get all namespaces
    that receive traffic from the default namespace.\n  linkerd viz stat namespaces
    --from ns/default\n\n  # Get all inbound stats to the test namespace.\n  linkerd
    viz stat ns/test\n\n  # Get all inbound stats to the emoji-grpc server\n  linkerd
    viz stat server/emoji-grpc\n\n  # Get all inbound stats to the web-public server
    authorization resource\n  linkerd viz stat serverauthorization/web-public\n\n
    \ # Get all inbound stats to the web-get and web-delete HTTP route resources\n
    \ linkerd viz stat route/web-get route/web-delete\n\n  # Get all inbound stats
    to the web-authz authorization policy resource\n  linkerd viz stat authorizationpolicy/web-authz\n
    \ "
  InheritedOptions: null
  Name: viz stat
  Options:
  - DefaultValue: ""
    Name: all-namespaces
    Shorthand: A
    Usage: |
      If present, returns stats across all namespaces, ignoring the "--namespace" flag
  - DefaultValue: ""
    Name: from
    Shorthand: ""
    Usage: |
      If present, restricts outbound stats from the specified resource name
  - DefaultValue: ""
    Name: from-namespace
    Shorthand: ""
    Usage: |
      Sets the namespace used from lookup the "--from" resource; by default the current "--namespace" is used
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for stat
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of the specified resource
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format; one of: "table" or "json" or "wide"'
  - DefaultValue: ""
    Name: selector
    Shorthand: l
    Usage: |
      Selector (label query) to filter on, supports '=', '==', and '!='
  - DefaultValue: ""
    Name: time-window
    Shorthand: t
    Usage: |
      Stat window (for example: "15s", "1m", "10m", "1h"). Needs to be at least 15s.
  - DefaultValue: ""
    Name: to
    Shorthand: ""
    Usage: |
      If present, restricts outbound stats to the specified resource name
  - DefaultValue: ""
    Name: to-namespace
    Shorthand: ""
    Usage: |
      Sets the namespace used to lookup the "--to" resource; by default the current "--namespace" is used
  - DefaultValue: ""
    Name: unmeshed
    Shorthand: ""
    Usage: If present, include unmeshed resources in the output
  SeeAlso: null
  Synopsis: Display traffic stats about one or many resources
- Description: |-
    Listen to a traffic stream.

      The RESOURCE argument specifies the target resource(s) to tap:
      (TYPE [NAME] | TYPE/NAME)

      Examples:
      * cronjob/my-cronjob
      * deploy
      * deploy/my-deploy
      * deploy my-deploy
      * ds/my-daemonset
      * job/my-job
      * ns/my-ns
      * rs
      * rs/my-replicaset
      * sts
      * sts/my-statefulset

      Valid resource types include:
      * cronjobs
      * daemonsets
      * deployments
      * jobs
      * namespaces
      * pods
      * replicasets
      * replicationcontrollers
      * statefulsets
      * services (only supported as a --to resource)
  Example: |2-
      # tap the web deployment in the default namespace
      linkerd viz tap deploy/web

      # tap the web-dlbvj pod in the default namespace
      linkerd viz tap pod/web-dlbvj

      # tap the test namespace, filter by request to prod namespace
      linkerd viz tap ns/test --to ns/prod
  InheritedOptions: null
  Name: viz tap
  Options:
  - DefaultValue: ""
    Name: authority
    Shorthand: ""
    Usage: Display requests with this :authority
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for tap
  - DefaultValue: ""
    Name: max-rps
    Shorthand: ""
    Usage: Maximum requests per second to tap.
  - DefaultValue: ""
    Name: method
    Shorthand: ""
    Usage: Display requests with this HTTP method
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of the specified resource
  - DefaultValue: ""
    Name: output
    Shorthand: o
    Usage: 'Output format. One of: "wide", "json", "jsonpath"'
  - DefaultValue: ""
    Name: path
    Shorthand: ""
    Usage: Display requests with paths that start with this prefix
  - DefaultValue: ""
    Name: scheme
    Shorthand: ""
    Usage: Display requests with this scheme
  - DefaultValue: ""
    Name: selector
    Shorthand: l
    Usage: |
      Selector (label query) to filter on, supports '=', '==', and '!='
  - DefaultValue: ""
    Name: to
    Shorthand: ""
    Usage: Display requests to this resource
  - DefaultValue: ""
    Name: to-namespace
    Shorthand: ""
    Usage: |
      Sets the namespace used to lookup the "--to" resource; by default the current "--namespace" is used
  SeeAlso: null
  Synopsis: Listen to a traffic stream
- Description: |-
    Display sorted information about live traffic.

      The RESOURCE argument specifies the target resource(s) to view traffic for:
      (TYPE [NAME] | TYPE/NAME)

      Examples:
      * cronjob/my-cronjob
      * deploy
      * deploy/my-deploy
      * deploy my-deploy
      * ds/my-daemonset
      * job/my-job
      * ns/my-ns
      * rs
      * rs/my-replicaset
      * sts
      * sts/my-statefulset

      Valid resource types include:
      * cronjobs
      * daemonsets
      * deployments
      * jobs
      * namespaces
      * pods
      * replicasets
      * replicationcontrollers
      * statefulsets
      * services (only supported as a --to resource)
  Example: |2-
      # display traffic for the web deployment in the default namespace
      linkerd viz top deploy/web

      # display traffic for the web-dlbvj pod in the default namespace
      linkerd viz top pod/web-dlbvj
  InheritedOptions: null
  Name: viz top
  Options:
  - DefaultValue: ""
    Name: authority
    Shorthand: ""
    Usage: Display requests with this :authority
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for top
  - DefaultValue: ""
    Name: hide-sources
    Shorthand: ""
    Usage: Hide the source column
  - DefaultValue: ""
    Name: max-rps
    Shorthand: ""
    Usage: Maximum requests per second to tap.
  - DefaultValue: ""
    Name: method
    Shorthand: ""
    Usage: Display requests with this HTTP method
  - DefaultValue: ""
    Name: namespace
    Shorthand: "n"
    Usage: Namespace of the specified resource
  - DefaultValue: ""
    Name: path
    Shorthand: ""
    Usage: Display requests with paths that start with this prefix
  - DefaultValue: ""
    Name: routes
    Shorthand: ""
    Usage: Display data per route instead of per path
  - DefaultValue: ""
    Name: scheme
    Shorthand: ""
    Usage: Display requests with this scheme
  - DefaultValue: ""
    Name: selector
    Shorthand: l
    Usage: |
      Selector (label query) to filter on, supports '=', '==', and '!='
  - DefaultValue: ""
    Name: to
    Shorthand: ""
    Usage: Display requests to this resource
  - DefaultValue: ""
    Name: to-namespace
    Shorthand: ""
    Usage: |
      Sets the namespace used to lookup the "--to" resource; by default the current "--namespace" is used
  SeeAlso: null
  Synopsis: Display sorted information about live traffic
- Description: |-
    Output Kubernetes resources to uninstall the linkerd-viz extension.

    This command provides all Kubernetes namespace-scoped and cluster-scoped resources (e.g services, deployments, RBACs, etc.) necessary to uninstall the Linkerd-viz extension.
  Example: linkerd viz uninstall | kubectl delete -f -
  InheritedOptions: null
  Name: viz uninstall
  Options:
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for uninstall
  SeeAlso: null
  Synopsis: |
    Output Kubernetes resources to uninstall the linkerd-viz extension
- Description: |
    viz manages the linkerd-viz extension of Linkerd service mesh.
  Example: ""
  InheritedOptions: null
  Name: viz
  Options:
  - DefaultValue: ""
    Name: api-addr
    Shorthand: ""
    Usage: |
      Override kubeconfig and communicate directly with the control plane at host:port (mostly for testing)
  - DefaultValue: ""
    Name: as
    Shorthand: ""
    Usage: Username to impersonate for Kubernetes operations
  - DefaultValue: ""
    Name: as-group
    Shorthand: ""
    Usage: Group to impersonate for Kubernetes operations
  - DefaultValue: ""
    Name: context
    Shorthand: ""
    Usage: Name of the kubeconfig context to use
  - DefaultValue: ""
    Name: help
    Shorthand: h
    Usage: help for viz
  - DefaultValue: ""
    Name: kubeconfig
    Shorthand: ""
    Usage: Path to the kubeconfig file to use for CLI requests
  - DefaultValue: ""
    Name: linkerd-namespace
    Shorthand: L
    Usage: Namespace in which Linkerd is installed
  - DefaultValue: ""
    Name: verbose
    Shorthand: ""
    Usage: Turn on debug logging
  - DefaultValue: ""
    Name: viz-namespace
    Shorthand: ""
    Usage: |
      Name of the linkerd-viz namespace. If not set, it's automatically detected
  SeeAlso: null
  Synopsis: |
    viz manages the linkerd-viz extension of Linkerd service mesh

